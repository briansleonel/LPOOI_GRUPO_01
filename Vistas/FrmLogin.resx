<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblNombreUsuario.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOVSURBVEhLvVVZ
        SJRRGP0VG8TSitAeMtCisGgZx7HNStKHfEmKXoIiiCjbUOitxbKyRbM9yV6FqTcJWiCkgiAwkKyGkiCX
        SZ0URp0ZnVHH5fSfb7z6zziWQXTgOPe/97vf+ZZ7rxr+A/5aZGRkBAMDA+jv74ff79Ppx9DQ0PhqZMxY
        hM56enrQ3d0t9HjceP+hEY42p4w/f22Cs6tn3DoUfxRRzj0eD3p7e0Po0sXqdCG/rw9v6+xw63Ojo6Pj
        Oycxrcjw8LA4Hxsbk29HS6v8slxKxOv1iADHA/5+uN3B+XBEFGG9WRLiyMFD0DRtgndu3ZZ5KVFjE97V
        fxGBF6/r8aP9pwTGQIyYIuJ2u0WAGZw8USiO4+pOYQMeYqX9rHw/tj3SMw3g67cWyUaV7ntzm4xZYiNC
        RGjASFTKEv2T41jdfhXmllKkd1dgsW0/FsbOk3WPHhBtedp8evYMkPu9Xq+sK0yIsLFKgMbMREQ+lsDa
        dgVrdRGz/rvi02mZJ5RAZWUl7Ha7HGX6UKVWEOvBwUFZ4CZFwkSRyzuxrPM6LD/LYA3cR0LhFqxfZZF1
        BsP6l5eXi7DT6RQh+jL2RUQ4qbJQZIRvXr0OZlOQhSUvjyPuYGbQWUeHOGNw6iJWV1fLmsPhQF9fX0hf
        NKVsFFBkyT42NGDTmgwsiJ6NvK256OrslI3Z2dnBAMIYHx8v69yvoPG4hmfBub9FVVWViLCEbDwDDwQC
        sqYZG04ys1b94m3L3ITEmDlYaJobwiRTApJmJWBX3g74fD5xUlRUJAL8ZpnoR/kkQkSYQXNTczD1PelI
        eX4Uqc+OIPVpwST5rc/H5KeJHVFTUyO9UAKKzIZ9CxEhNput0PZakdxehozOMpg79DsSTuc1rMMDaFmL
        UHj4mOxjiYwCJP3Sv8YUjSLzNRO0h/uwvOkSzK2lcj8iMb2rHInX85Ft2Sj7wgVI+mWPND6E6nQRC6Ji
        oVUfQJqrAlb3TVh6b0SkNXAPSXd3I8eaJfvCBUiKsAVSVPUcEDHsx7IEaDkpiMpNnZbR25dCSzZhvSVT
        9kUScLlcwZeDBhxwgk2y2WwoLT6PK8UXdV74LUvOnENtbe2UhiuBiSMsf3XwGeACbzrHM6VRgM5ZepJr
        ChMiBP+r0ZhG3EAqB9NR2Snn6u4YESKiwAvJPjEzo6CRyilteExZ6ukQUUSBvaIgS8JTwoePZLQsK0/m
        TPBbkX8D4BdZPWpo9dp1qAAAAABJRU5ErkJggg==
</value>
  </data>
</root>